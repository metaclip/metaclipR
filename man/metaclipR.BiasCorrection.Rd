% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/metaclipR.BiasCorrection.R
\name{metaclipR.BiasCorrection}
\alias{metaclipR.BiasCorrection}
\title{Directed metadata graph construction for bias correction steps}
\usage{
metaclipR.BiasCorrection(
  package = "downscaleR",
  version = "3.0.0",
  fun = "biasCorrection",
  arg.list,
  graph,
  TrainingGraph,
  ReferenceGraph,
  ReferenceGraphSpatialExtent = NULL,
  ReferenceGraphRectangularGrid = NULL,
  BC.method,
  BC.class = "BiasCorrection",
  isDefinedBy = NULL,
  comment = NULL,
  hasProbCharacter = NULL,
  isMultivariable = NULL,
  isMultisite = NULL,
  disable.command = FALSE,
  dc.description = NULL
)
}
\arguments{
\item{package}{bias correction package. Default to \code{"downscaleR"}}

\item{version}{A character string of the package version (e.g. as returned by \code{\link[utils]{packageVersion}})}

\item{fun}{Validation function. Default to \code{"biasCorrection"}.}

\item{arg.list}{Either a character string containing a literal command call or a key-value pair list of arguments-values. See the dedicated section more for details.}

\item{graph}{metaclipR output containing the data top be bias-corrected.}

\item{TrainingGraph}{metaclipR output containing the training data (e.g. 20C3M/historical scenario in
climate change applications etc.)}

\item{ReferenceGraph}{metaclipR output containing the reference predictand (typically observations)}

\item{ReferenceGraphSpatialExtent}{Default to \code{NULL} and unused. Otherwise, this points to a SpatialExtent class node
containing the horizontal spatial extent information of the observations. This will update the Spatial extent of the calibrated
dataset to that of the reference observations used for calibration.}

\item{ReferenceGraphRectangularGrid}{Default to \code{NULL} and unused. Otherwise, this points to a ds:RectangularGrid class node
containing the grid definition of the predictand. This will update the Spatial extent of the calibrated
dataset to that of the reference observations used for calibration.}

\item{BC.method}{Character string indicating the name of the bias correction method.
For a list of known (instantiable) BiasCorrection methods see \code{knownClassIndividuals("BiasCorrection", "calibration")}}

\item{BC.class}{Character string indicating the specific subclass of the Calibration superclass being asserted.
Accepted values are defined in the Calibration ontology (see Details). By default, the superclass \code{"BiasCorrection"}
is assigned, but other more specific subclasses should be indicated when relevant.}

\item{isDefinedBy}{An optional character string indicating where or by who the method has been defined 
(e.g. paper publication etc.). This is encoded as rdfs:isDefinedBy data property associated to the calibration method).}

\item{comment}{An optional character string with a comment on the method (encoded as rdfs:comment data property
associated to the calibration method)}

\item{hasProbCharacter}{Default to NULL (unspecified). It referes to the probabilistic nature of the method. 
Two possible disjoint values: \code{"deterministic"} or \code{"stochastic"}}

\item{isMultivariable}{Default to NULL (unspecified). isMultisite Default to NULL (unspecified), otherwise logical. Is the bias correction method envisaged to 
deal with multisite predictions? See References.}

\item{isMultisite}{Default to NULL (unspecified), otherwise logical. Is the bias correction method envisaged to 
deal with multisite predictions? See References.}

\item{disable.command}{Better not to touch. For internal usage only (used to re-use most of the code in
other functions, but skipping command tracking)}

\item{dc.description}{Default to \code{NULL} and unused. Otherwise, this is a character string that will be appendend as a
"dc:description" annotation to the ds:Calibration node.}
}
\description{
Build a directed metadata graph from bias correction routines
}
\details{
This function takes as reference the semantics defined in the Calibration ontology defined in the 
Metaclip Framework (\url{http://www.metaclip.org/}). These in turn are partially based on the VALUE Framewrok (Gutiérrez et al. 2018)
}
\section{About argument lists}{

Argument lists are key-value list in which the different arguments and their valus are passed 
to the command description. These were initially conceived as an adequate means of describing
command calls to interpreted languajes (R, python...) using both the Argument and Argument 
classes from the datasource vocabulary of METACLIP.

Alternatively, and in order to accomodate the description of the source code to other environments
and languajes (e.g. shell scripts, calls to CDOs etc.), the use of literal command calls 
is a more convenient choice. Literal command calls also allow for a more straightforward
reproducibility by just "copying and pasting" the code used to generate each step. Literal
command calls are encoded in METACLIP using the \emph{hadLiteralCommandCall} data property
from the datasource vocabulary, that is attached to the command description. 
To apply this second alternative, the \code{arg.list} argument is specified as a character string
containing the command call.

Note that default argument values are often omitted from comand calls. However, the default behaviour of 
commands may change depending on the specific software version, and it is therefore often advisable to 
explicitly include the default argument values for a more straightforward interpretation of the source code
by the user.
}

\references{
Gutiérrez et al, 2018. An intercomparison of a large ensemble of statistical downscaling methods over Europe: 
Results from the VALUE perfect predictor cross-validation experiment. International Journal of Climatology. 
https://doi.org/10.1002/joc.5462
}
\author{
D. San Martín, J. Bedia
}
\concept{calibration}
