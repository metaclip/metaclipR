% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/embedFig.R
\name{embedFig}
\alias{embedFig}
\title{Generate a figure bitmap file with embedded metadata}
\usage{
embedFig(plot.fun, arg.list, full.metadata, format = "png", filename, ...)
}
\arguments{
\item{plot.fun}{Character. Name of the plotting function}

\item{arg.list}{Either a character string containing a literal command call or a key-value pair list of arguments-values. See the dedicated section more for details.}

\item{full.metadata}{An igraph-class containing the RDF graph with the full metadata structure.}

\item{format}{Format of the bitmap file. Currently only the \code{"png"} option is available}

\item{filename}{The name of the output file.}

\item{...}{further optional arguments passed to \code{\link{png}} (width, height etc.)}
}
\value{
A temporary file of the specified format
}
\description{
The function calls a plotting function, and writes to a user-defined bitmap file, including
the full metadata description provided by the user. This information is a compressed JSON representation.
}
\details{
The function performs the following steps:
\enumerate{
\item Write the output figure in a temporary file
\item Serialize the RDF graph into json and write it into a temporary file
\item Read the temporary json file and compress (gzip)
\item Read the temporary image file, and re-write into the destination file (as given in \code{filename}),
appending the compressed metadata
}
}
\section{About argument lists}{

Argument lists are key-value list in which the different arguments and their valus are passed 
to the command description. These were initially conceived as an adequate means of describing
command calls to interpreted languajes (R, python...) using both the Argument and Argument 
classes from the datasource vocabulary of METACLIP.

Alternatively, and in order to accomodate the description of the source code to other environments
and languajes (e.g. shell scripts, calls to CDOs etc.), the use of literal command calls 
is a more convenient choice. Literal command calls also allow for a more straightforward
reproducibility by just "copying and pasting" the code used to generate each step. Literal
command calls are encoded in METACLIP using the \emph{hadLiteralCommandCall} data property
from the datasource vocabulary, that is attached to the command description. 
To apply this second alternative, the \code{arg.list} argument is specified as a character string
containing the command call.

Note that default argument values are often omitted from comand calls. However, the default behaviour of 
commands may change depending on the specific software version, and it is therefore often advisable to 
explicitly include the default argument values for a more straightforward interpretation of the source code
by the user.
}

\seealso{
Other graphical.outputs: 
\code{\link{embedJSON}()},
\code{\link{graph2json}()}
}
\author{
J. Bedia
}
\concept{graphical.outputs}
